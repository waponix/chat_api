version: '3.9'

services:
  api_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api_app
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - network_app
      - network_ai

  server_nginx:
    image: nginx:alpine
    container_name: server_nginx
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/snippets:/etc/nginx/snippets
    depends_on:
      - api_app
      - ollama
    networks:
      - network_app
      - network_ai

  db_mysql:
    image: mysql:8.0
    container_name: db_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: chat_app
      MYSQL_USER: chat_app
      MYSQL_PASSWORD: root
    networks:
      - network_app

  db_redis:
    image: redis/redis-stack:latest
    container_name: db_redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis:/usr/local/etc/redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    environment:
      - REDIS_PASSWORD=redisAdmin123
    networks:
      - network_app

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db_mysql
    networks:
      - network_app

  ollama:
    build:
      context: ./ollama
      dockerfile: Dockerfile
    container_name: ollama
    volumes:
      - 'ollama:/root/.ollama'
    ports:
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
    networks:
      - network_ai
    restart: unless-stopped

volumes:
  ollama:

networks:
  network_app:
    driver: bridge
  network_ai:
    driver: bridge
